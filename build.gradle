plugins {
    id 'fabric-loom' version '0.5-SNAPSHOT'
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = project.archives_base_name
version = project.mod_version + "+" + project.minecraft_version
group = project.maven_group

repositories {
    maven { url "https://maven.modmuss50.me" }
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"

    modImplementation("me.shedaniel.cloth:config-2:${project.cloth_version}"){
        exclude group: "net.fabricmc"
        exclude group: "net.fabricmc.fabric-api"
    }
    modCompile "net.fabricmc:fabric-loader:${project.loader_version}"
    modImplementation fabricApi.module("fabric-api-base", project.fabric_version)
    modImplementation fabricApi.module("fabric-command-api-v1", project.fabric_version)
    modRuntime fabricApi.module("fabric-resource-loader-v0", project.fabric_version)
    modImplementation("io.github.prospector:modmenu:${project.modmenu_version}"){
        exclude group: "net.fabricmc"
        exclude group: "net.fabricmc.fabric-api"
    }

    include("me.shedaniel.cloth:config-2:${project.cloth_version}") {
        exclude group: "net.fabricmc"
        exclude group: "net.fabricmc.fabric-api"
    }
    include fabricApi.module("fabric-api-base", project.fabric_version)
    include fabricApi.module("fabric-command-api-v1", project.fabric_version)
    include fabricApi.module("fabric-resource-loader-v0", project.fabric_version)
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.encoding = "UTF-8"

    def targetVersion = 8
    if (JavaVersion.current().isJava9Compatible()) {
        it.options.release = targetVersion
    }
}

java {
    withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}" }
    }
}
